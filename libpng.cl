(defpackage "LIBPNG" (:use #:CFFI #:CL) (:nicknames) (:export "PNG-TEXT-STRUCT" "PNG-UNKNOWN-CHUNK-T" "PNG-ROW-INFO-STRUCT" "PNG-COLOR-8-STRUCT" "PNG-INFO-STRUCT" "PNG-TIME-STRUCT" "Z-STREAM-S" "PNG-SPLT-STRUCT" "--JMP-BUF-TAG" "PNG-COLOR-STRUCT" "-IO-MARKER" "INTERNAL-STATE" "PNG-STRUCT-DEF" "-IO-FILE" "PNG-SPLT-ENTRY-STRUCT" "--SIGSET-T" "PNG-COLOR-16-STRUCT" "TM" "PNG-EQUATION-BASE-E" "PNG-FILTER-VALUE-LAST" "PNG-TRANSFORM-INVERT-MONO" "PNG-ASM-FLAG-MMX-READ-COMBINE-ROW" "PNG-COLOR-MASK-PALETTE" "PNG-LIBPNG-BUILD-PATCH" "PNG-COLOR-TYPE-GRAY" "PNG-SCALE-METER" "PNG-HANDLE-CHUNK-IF-SAFE" "PNG-LIBPNG-VER-RELEASE" "PNG-SRGB-INTENT-SATURATION" "PNG-LIBPNG-VER-1" "PNG-FREE-ROWS" "PNG-LIBPNG-VER-DLLNUM" "PNG-TRANSFORM-SWAP-ALPHA" "PNG-ASM-FLAG-MMX-READ-FILTER-PAETH" "PNG-INFO-PLTE" "PNG-FILTER-VALUE-SUB" "PNG-FLAG-MNG-EMPTY-PLTE" "PNG-TRANSFORM-PACKING" "PNG-FILTER-NONE" "PNG-TRANSFORM-STRIP-16" "PNG-DESTROY-WILL-FREE-DATA" "PNG-TEXT-COMPRESSION-ZTXT" "PNG-ALL-MNG-FEATURES" "PNG-INFO-TIME" "PNG-INFO-SPLT" "PNG-FILTER-HEURISTIC-LAST" "PNG-SRGB-INTENT-LAST" "PNG-FREE-LIST" "PNG-EQUATION-HYPERBOLIC" "PNG-HANDLE-CHUNK-NEVER" "PNG-TRANSFORM-INVERT-ALPHA" "PNG-FREE-PLTE" "PNG-INFO-PCAL" "PNG-TRANSFORM-STRIP-FILLER" "PNG-SELECT-READ" "PNG-OFFSET-LAST" "PNG-INTRAPIXEL-DIFFERENCING" "PNG-FREE-ICCP" "PNG-INFO-SCAL" "PNG-ASM-FLAG-MMX-READ-INTERLACE" "PNG-ZBUF-SIZE" "PNG-ASM-FLAG-MMX-READ-FILTER-UP" "PNG-MAX-PALETTE-LENGTH" "PNG-SELECT-WRITE" "PNG-LIBPNG-VER-MAJOR" "PNG-FILTER-PAETH" "PNG-SRGB-INTENT-ABSOLUTE" "PNG-FREE-TEXT" "PNG-FREE-HIST" "PNG-FILLER-BEFORE" "PNG-LIBPNG-BUILD-BETA" "PNG-CRC-DEFAULT" "PNG-SCALE-LAST" "PNG-COLOR-MASK-COLOR" "PNG-FREE-PCAL" "PNG-SCALE-RADIAN" "PNG-FREE-SCAL" "PNG-TEXT-COMPRESSION-ZTXT-WR" "PNG-NO-FILTERS" "PNG-BACKGROUND-GAMMA-UNKNOWN" "PNG-FILTER-VALUE-UP" "PNG-INFO-SRGB" "PNG-COLOR-MASK-ALPHA" "PNG-FREE-UNKN" "PNG-ASM-FLAG-MMX-SUPPORT-COMPILED" "PNG-LIBPNG-VER-BUILD" "PNG-TEXT-COMPRESSION-NONE" "PNG-USER-WILL-FREE-DATA" "PNG-FILTER-SUB" "PNG-LIBPNG-BUILD-STABLE" "PNG-EQUATION-ARBITRARY" "PNG-FILTER-AVG" "PNG-INTERLACE-NONE" "PNG-FILTER-VALUE-AVG" "PNG-OFFSET-MICROMETER" "PNG-LIBPNG-BUILD-ALPHA" "PNG-INFO-OFFS" "PNG-LIBPNG-BUILD-PRIVATE" "PNG-INTERLACE-LAST" "PNG-ASM-FLAG-MMX-READ-FILTER-AVG" "PNG-BACKGROUND-GAMMA-FILE" "PNG-INTERLACE-ADAM7" "PNG-LIBPNG-BUILD-SPECIAL" "PNG-KEYWORD-MAX-LENGTH" "PNG-TRANSFORM-STRIP-ALPHA" "PNG-TRANSFORM-PACKSWAP" "PNG-INFO-BKGD" "PNG-ASM-FLAGS-INITIALIZED" "PNG-EQUATION-LAST" "PNG-FILTER-HEURISTIC-WEIGHTED" "PNG-HANDLE-CHUNK-ALWAYS" "PNG-FILLER-AFTER" "PNG-HANDLE-CHUNK-AS-DEFAULT" "PNG-SCALE-UNKNOWN" "PNG-CRC-QUIET-USE" "PNG-TRANSFORM-SWAP-ENDIAN" "PNG-ITXT-COMPRESSION-ZTXT" "PNG-FREE-TRNS" "PNG-FREE-ALL" "PNG-OFFSET-PIXEL" "PNG-TEXT-COMPRESSION-LAST" "PNG-BACKGROUND-GAMMA-SCREEN" "PNG-TRANSFORM-SHIFT" "PNG-TEXT-COMPRESSION-NONE-WR" "PNG-SRGB-INTENT-PERCEPTUAL" "PNG-COMPRESSION-TYPE-BASE" "PNG-RESOLUTION-LAST" "PNG-FILTER-TYPE-BASE" "PNG-INFO-GAMA" "PNG-FLAG-MNG-FILTER-64" "PNG-INFO-ICCP" "PNG-LIBPNG-VER-MINOR" "PNG-FILTER-VALUE-NONE" "PNG-TRANSFORM-BGR" "PNG-LIBPNG-VER-SONUM" "PNG-RESOLUTION-UNKNOWN" "PNG-FILTER-UP" "PNG-EQUATION-LINEAR" "PNG-INFO-PHYS" "PNG-LIBPNG-BUILD-RELEASE-STATUS-MASK" "PNG-FILTER-HEURISTIC-DEFAULT" "PNG-FREE-MUL" "PNG-SRGB-INTENT-RELATIVE" "PNG-INFO-HIST" "PNG-INFO-CHRM" "PNG-BACKGROUND-GAMMA-UNIQUE" "PNG-ITXT-COMPRESSION-NONE" "PNG-TRANSFORM-EXPAND" "PNG-SET-WILL-FREE-DATA" "PNG-RESOLUTION-METER" "PNG-LIBPNG-BUILD-RC" "PNG-ASM-FLAG-MMX-SUPPORT-IN-CPU" "PNG-INFO-SBIT" "PNG-CRC-WARN-DISCARD" "PNG-ASM-FLAG-MMX-READ-FILTER-SUB" "PNG-CRC-WARN-USE" "PNG-FREE-SPLT" "PNG-FILTER-VALUE-PAETH" "PNG-CRC-ERROR-QUIT" "PNG-INFO-TRNS" "PNG-FILTER-HEURISTIC-UNWEIGHTED" "PNG-TRANSFORM-IDENTITY" "PNG-CRC-NO-CHANGE" "PNG-WRITE-ROWS" "PNG-SET-INVERT-ALPHA" "PNG-SET-PLTE" "PNG-SET-BGR" "PNG-SET-PALETTE-TO-RGB" "PNG-WRITE-INFO" "PNG-WRITE-PNG" "PNG-GET-IMAGE-WIDTH" "PNG-FREE-DEFAULT" "PNG-READ-UPDATE-INFO" "PNG-FREE-DATA" "PNG-SET-SWAP-ALPHA" "PNG-SET-SIG-BYTES" "PNG-SET-READ-USER-TRANSFORM-FN" "PNG-SET-RGB-TO-GRAY-FIXED" "PNG-GET-ASM-FLAGS" "PNG-SET-ERROR-FN" "PNG-GET-CHRM" "PNG-DATA-FREER" "PNG-GET-PCAL" "PNG-SET-CHRM" "PNG-GET-MMX-BITDEPTH-THRESHOLD" "PNG-MMX-SUPPORT" "PNG-GET-IHDR" "PNG-GET-COMPRESSION-TYPE" "PNG-SET-STRIP-ALPHA" "PNG-GET-ASM-FLAGMASK" "PNG-SET-STRIP-16" "PNG-SET-TRNS-TO-ALPHA" "PNG-SET-PCAL" "PNG-SET-EXPAND" "PNG-INIT-IO" "PNG-SET-READ-FN" "PNG-SET-IHDR" "PNG-SET-PROGRESSIVE-READ-FN" "PNG-ACCESS-VERSION-NUMBER" "PNG-WRITE-CHUNK-END" "PNG-READ-END" "PNG-GET-LIBPNG-VER" "PNG-GET-COLOR-TYPE" "PNG-SET-COMPRESSION-BUFFER-SIZE" "PNG-SET-MMX-THRESHOLDS" "PNG-SET-UNKNOWN-CHUNK-LOCATION" "PNG-GET-BIT-DEPTH" "PNG-WRITE-CHUNK-START" "PNG-SET-SWAP" "PNG-SIG-CMP" "PNG-SET-USER-LIMITS" "PNG-GET-IO-PTR" "PNG-SET-SCAL-S" "PNG-PROCESS-DATA" "PNG-SIG-BYTES" "PNG-GET-ROWBYTES" "PNG-MEMCPY-CHECK" "PNG-SET-INVALID" "PNG-SET-DITHER" "PNG-FREE" "PNG-SET-CHRM-FIXED" "PNG-SET-COMPRESSION-STRATEGY" "PNG-WRITE-CHUNK" "PNG-READ-PNG" "PNG-CONVERT-FROM-TIME-T" "PNG-GET-TIME" "PNG-GET-USER-CHUNK-PTR" "PNG-SET-SHIFT" "PNG-SET-TIME" "PNG-GET-ICCP" "PNG-GET-IMAGE-HEIGHT" "PNG-GET-MEM-PTR" "PNG-DESTROY-WRITE-STRUCT" "PNG-GET-HEADER-VER" "PNG-GET-TRNS" "PNG-WRITE-ROW" "PNG-GET-SIGNATURE" "PNG-SET-ICCP" "PNG-GET-UNKNOWN-CHUNKS" "PNG-SET-TRNS" "PNG-GET-RGB-TO-GRAY-STATUS" "PNG-SET-INVERT-MONO" "PNG-GET-PIXEL-ASPECT-RATIO" "PNG-GET-PIXELS-PER-METER" "PNG-SET-UNKNOWN-CHUNKS" "PNG-SET-RGB-TO-GRAY" "PNG-GET-INTERLACE-TYPE" "PNG-SET-READ-USER-CHUNK-FN" "PNG-GET-MMX-ROWBYTES-THRESHOLD" "PNG-WRITE-INFO-BEFORE-PLTE" "PNG-GET-SRGB" "PNG-GET-Y-OFFSET-PIXELS" "PNG-MEMSET-CHECK" "PNG-GET-PROGRESSIVE-PTR" "PNG-SET-SRGB" "PNG-GET-FILTER-TYPE" "PNG-WRITE-END" "PNG-WRITE-CHUNK-DATA" "PNG-CONVERT-FROM-STRUCT-TM" "PNG-SET-ADD-ALPHA" "PNG-SET-FILLER" "PNG-GET-HIST" "PNG-SET-PACKSWAP" "PNG-GET-COMPRESSION-BUFFER-SIZE" "PNG-READ-ROWS" "PNG-SET-HIST" "PNG-GET-VALID" "PNG-GET-USER-TRANSFORM-PTR" "PNG-SET-FILTER-HEURISTICS" "PNG-SET-CRC-ACTION" "PNG-SET-BACKGROUND" "PNG-GET-ROWS" "PNG-GET-X-OFFSET-PIXELS" "PNG-INFO-INIT-3" "PNG-CHUNK-WARNING" "PNG-CREATE-WRITE-STRUCT" "PNG-GET-ERROR-PTR" "PNG-SET-ROWS" "PNG-GET-X-OFFSET-MICRONS" "PNG-WRITE-IMAGE" "PNG-GET-CHRM-FIXED" "PNG-GET-Y-OFFSET-MICRONS" "PNG-SET-USER-TRANSFORM-INFO" "PNG-SET-MEM-FN" "PNG-INFO-INIT" "PNG-SET-GAMA-FIXED" "PNG-BUILD-GRAYSCALE-PALETTE" "PNG-SET-WRITE-USER-TRANSFORM-FN" "PNG-GET-USER-HEIGHT-MAX" "PNG-GET-MMX-FLAGMASK" "PNG-WRITE-FLUSH" "PNG-SET-WRITE-STATUS-FN" "PNG-SET-ASM-FLAGS" "PNG-SET-KEEP-UNKNOWN-CHUNKS" "PNG-GET-SPLT" "PNG-MALLOC-WARN" "PNG-GET-CHANNELS" "PNG-CREATE-INFO-STRUCT" "PNG-SET-SPLT" "PNG-GET-SBIT" "PNG-READ-IMAGE" "PNG-SET-COMPRESSION-METHOD" "PNG-SET-GRAY-TO-RGB" "PNG-SET-FILTER" "PNG-SET-SBIT" "PNG-READ-DESTROY" "PNG-MALLOC" "PNG-SET-COMPRESSION-MEM-LEVEL" "PNG-PROGRESSIVE-COMBINE-ROW" "PNG-CREATE-WRITE-STRUCT-2" "PNG-PERMIT-EMPTY-PLTE" "PNG-GET-Y-PIXELS-PER-METER" "PNG-GET-X-PIXELS-PER-METER" "PNG-SET-GAMMA" "PNG-WRITE-DESTROY" "PNG-CREATE-READ-STRUCT-2" "PNG-GET-PHYS" "PNG-CONVERT-TO-RFC1123" "PNG-HANDLE-AS-UNKNOWN" "PNG-SET-WRITE-FN" "PNG-SET-STRIP-ERROR-NUMBERS" "PNG-SET-PHYS" "PNG-READ-INFO" "PNG-READ-ROW" "PNG-GET-OFFS" "PNG-SET-READ-STATUS-FN" "PNG-CHECK-SIG" "PNG-SET-COMPRESSION-WINDOW-BITS" "PNG-CREATE-READ-STRUCT" "PNG-GET-GAMA" "PNG-SET-FLUSH" "PNG-SET-OFFS" "PNG-WARNING" "PNG-DESTROY-INFO-STRUCT" "PNG-ERROR" "PNG-DESTROY-READ-STRUCT" "PNG-SET-GAMA" "PNG-GET-SCAL" "PNG-PERMIT-MNG-FEATURES" "PNG-MALLOC-DEFAULT" "PNG-SET-COMPRESSION-LEVEL" "PNG-SET-GRAY-1-2-4-TO-8" "PNG-GET-HEADER-VERSION" "PNG-SET-SCAL" "PNG-GET-TEXT" "PNG-SET-PACKING" "PNG-GET-BKGD" "PNG-SET-INTERLACE-HANDLING" "PNG-CHUNK-ERROR" "PNG-RESET-ZSTREAM" "PNG-START-READ-IMAGE" "PNG-GET-USER-WIDTH-MAX" "PNG-GET-COPYRIGHT" "PNG-SET-TEXT" "PNG-GET-GAMA-FIXED" "PNG-SET-SRGB-GAMA-AND-CHRM" "PNG-GET-PLTE" "PNG-SET-BKGD" "PNG-SPLT-ENTRY" "PNG-INT-32" "PNG-INT-16" "PNG-VOIDP" "PNG-TEXTPP" "PNG-INT-16P" "PNG-UNKNOWN-CHUNK-PTR" "PNG-UINT-16P" "PNG-UNKNOWN-CHUNK" "PNG-STRUCT" "PNG-UINT-32P" "PNG-INFOPP" "PNG-TIMEPP" "PNG-INFOP" "PNG-ZCHARPP" "Z-STREAM" "PNG-CHARPP" "PNG-USER-CHUNK-PTR" "PNG-BYTEPP" "PNG-TEXTP" "-IO-LOCK-T" "--OFF-T" "PNG-INT-32PP" "PNG-INT-16PP" "PNG-UINT-16PP" "PNG-WRITE-STATUS-PTR" "PNG-STRUCTPP" "CHARF" "PNG-UINT-32PP" "PNG-TIMEP" "PNG-READ-STATUS-PTR" "UINT" "FREE-FUNC" "BYTE" "PNG-BYTEP" "PNG-ROW-INFOPP" "ALLOC-FUNC" "ULONG" "PNG-FREE-PTR" "PNG-TEXT" "PNG-SPLT-ENTRYPP" "PNG-PROGRESSIVE-END-PTR" "PNG-COLOR-8PP" "PNG-SPLT-T" "PNG-INFO" "PNG-COLORP" "PNG-SPLT-ENTRYP" "PNG-COLOR" "PNG-SPLT-TPP" "SIZE-T" "PNG-MALLOC-PTR" "PNG-TIME" "PNG-PROGRESSIVE-ROW-PTR" "JMP-BUF" "PNG-CHARPPP" "PNG-CONST-CHARP" "PNG-FIXED-POINT-P" "PNG-DOUBLEP" "PNG-COLOR-8P" "PNG-DOUBLEPP" "PNG-FILE-P" "FILE" "PNG-COLOR-8" "PNG-STRUCTP" "PNG-UNKNOWN-CHUNKPP" "PNG-RW-PTR" "PNG-COLORPP" "PNG-INT-32P" "PNG-ROW-INFO" "PNG-FIXED-POINT-PP" "PNG-CHARP" "--JMP-BUF" "PNG-ERROR-PTR" "PNG-COLOR-16P" "PNG-COLOR-16PP" "PNG-USER-TRANSFORM-PTR" "PNG-FLUSH-PTR" "PNG-ZSTREAMP" "PNG-CONST-CHARPP" "PNG-PROGRESSIVE-INFO-PTR" "PNG-ZCHARP" "VERSION-1-2-8" "PNG-SIZE-T" "PNG-FIXED-POINT" "VOIDPF" "BYTEF" "PNG-COLOR-16" "PNG-ROW-INFOP" "PNG-SPLT-TP" "PNG-BYTE" "--OFF64-T" "PNG-UINT-32" "PNG-UNKNOWN-CHUNKP" "PNG-UINT-16"))

(in-package "LIBPNG")
(asdf:operate 'asdf:load-op 'verrazano-support)
(cffi:defcstruct --sigset-t (--val :unsigned-long :count 31))
(cffi:defcstruct internal-state (dummy :int))
(cffi:define-foreign-type bytef () (QUOTE byte))
(cffi:define-foreign-type byte () (QUOTE :unsigned-char))
(cffi:define-foreign-type uint () (QUOTE :unsigned-int))
(cffi:define-foreign-type ulong () (QUOTE :unsigned-long))
(cffi:define-foreign-type alloc-func () (QUOTE :pointer))
(cffi:define-foreign-type voidpf () (QUOTE :pointer))
(cffi:define-foreign-type free-func () (QUOTE :pointer))
(cffi:defcstruct z-stream-s (next-in :pointer) (avail-in uint) (total-in ulong) (next-out :pointer) (avail-out uint) (total-out ulong) (msg :pointer) (state :pointer) (zalloc alloc-func) (zfree free-func) (opaque voidpf) (data-type :int) (adler ulong) (reserved ulong))
(cffi:defcstruct -io-marker (-next :pointer) (-sbuf :pointer) (-pos :int))
(cffi:define-foreign-type --off-t () (QUOTE :long))
(cffi:define-foreign-type -io-lock-t () (QUOTE :void))
(cffi:define-foreign-type --off64-t () (QUOTE :long))
(cffi:defcstruct -io-file (-flags :int) (-io-read-ptr :pointer) (-io-read-end :pointer) (-io-read-base :pointer) (-io-write-base :pointer) (-io-write-ptr :pointer) (-io-write-end :pointer) (-io-buf-base :pointer) (-io-buf-end :pointer) (-io-save-base :pointer) (-io-backup-base :pointer) (-io-save-end :pointer) (-markers :pointer) (-chain :pointer) (-fileno :int) (-flags2 :int) (-old-offset --off-t) (-cur-column :short) (-vtable-offset :char) (-shortbuf :char :count 0) (-lock :pointer) (-offset --off64-t) (--pad1 :pointer) (--pad2 :pointer) (-mode :int) (-unused2 :char :count 51))
(cffi:define-foreign-type --jmp-buf () (QUOTE :int))
(cffi:defcstruct --jmp-buf-tag (--jmpbuf --jmp-buf :count 5) (--mask-was-saved :int) (--saved-mask --sigset-t))
(cffi:defcstruct tm (tm-sec :int) (tm-min :int) (tm-hour :int) (tm-mday :int) (tm-mon :int) (tm-year :int) (tm-wday :int) (tm-yday :int) (tm-isdst :int) (tm-gmtoff :long) (tm-zone :pointer))
(cffi:define-foreign-type png-byte () (QUOTE :unsigned-char))
(cffi:defcstruct png-color-struct (red png-byte) (green png-byte) (blue png-byte))
(cffi:define-foreign-type png-uint-16 () (QUOTE :short))
(cffi:defcstruct png-color-16-struct (index png-byte) (red png-uint-16) (green png-uint-16) (blue png-uint-16) (gray png-uint-16))
(cffi:defcstruct png-color-8-struct (red png-byte) (green png-byte) (blue png-byte) (gray png-byte) (alpha png-byte))
(cffi:defcstruct png-splt-entry-struct (red png-uint-16) (green png-uint-16) (blue png-uint-16) (alpha png-uint-16) (frequency png-uint-16))
(cffi:define-foreign-type png-charp () (QUOTE :pointer))
(cffi:define-foreign-type png-splt-entryp () (QUOTE :pointer))
(cffi:define-foreign-type png-splt-entry () (QUOTE png-splt-entry-struct))
(cffi:define-foreign-type png-int-32 () (QUOTE :long))
(cffi:defcstruct png-splt-struct (name png-charp) (depth png-byte) (entries png-splt-entryp) (nentries png-int-32))
(cffi:define-foreign-type png-size-t () (QUOTE size-t))
(cffi:define-foreign-type size-t () (QUOTE :unsigned-int))
(cffi:defcstruct png-text-struct (compression :int) (key png-charp) (text png-charp) (text-length png-size-t))
(cffi:defcstruct png-time-struct (year png-uint-16) (month png-byte) (day png-byte) (hour png-byte) (minute png-byte) (second png-byte))
(cffi:defcstruct png-unknown-chunk-t (name png-byte :count 4) (data :pointer) (size png-size-t) (location png-byte))
(cffi:define-foreign-type png-uint-32 () (QUOTE :unsigned-long))
(cffi:define-foreign-type png-colorp () (QUOTE :pointer))
(cffi:define-foreign-type png-color () (QUOTE png-color-struct))
(cffi:define-foreign-type png-textp () (QUOTE :pointer))
(cffi:define-foreign-type png-text () (QUOTE png-text-struct))
(cffi:define-foreign-type png-time () (QUOTE png-time-struct))
(cffi:define-foreign-type png-color-8 () (QUOTE png-color-8-struct))
(cffi:define-foreign-type png-bytep () (QUOTE :pointer))
(cffi:define-foreign-type png-color-16 () (QUOTE png-color-16-struct))
(cffi:define-foreign-type png-uint-16p () (QUOTE :pointer))
(cffi:define-foreign-type png-charpp () (QUOTE :pointer))
(cffi:define-foreign-type png-unknown-chunkp () (QUOTE :pointer))
(cffi:define-foreign-type png-unknown-chunk () (QUOTE png-unknown-chunk-t))
(cffi:define-foreign-type png-splt-tp () (QUOTE :pointer))
(cffi:define-foreign-type png-splt-t () (QUOTE png-splt-struct))
(cffi:define-foreign-type png-bytepp () (QUOTE :pointer))
(cffi:define-foreign-type png-fixed-point () (QUOTE png-int-32))
(cffi:defcstruct png-info-struct (width png-uint-32) (height png-uint-32) (valid png-uint-32) (rowbytes png-uint-32) (palette png-colorp) (num-palette png-uint-16) (num-trans png-uint-16) (bit-depth png-byte) (color-type png-byte) (compression-type png-byte) (filter-type png-byte) (interlace-type png-byte) (channels png-byte) (pixel-depth png-byte) (spare-byte png-byte) (signature png-byte :count 7) (gamma :float) (srgb-intent png-byte) (num-text :int) (max-text :int) (text png-textp) (mod-time png-time) (sig-bit png-color-8) (trans png-bytep) (trans-values png-color-16) (background png-color-16) (x-offset png-int-32) (y-offset png-int-32) (offset-unit-type png-byte) (x-pixels-per-unit png-uint-32) (y-pixels-per-unit png-uint-32) (phys-unit-type png-byte) (hist png-uint-16p) (x-white :float) (y-white :float) (x-red :float) (y-red :float) (x-green :float) (y-green :float) (x-blue :float) (y-blue :float) (pcal-purpose png-charp) (pcal-x0 png-int-32) (pcal-x1 png-int-32) (pcal-units png-charp) (pcal-params png-charpp) (pcal-type png-byte) (pcal-nparams png-byte) (free-me png-uint-32) (unknown-chunks png-unknown-chunkp) (unknown-chunks-num png-size-t) (iccp-name png-charp) (iccp-profile png-charp) (iccp-proflen png-uint-32) (iccp-compression png-byte) (splt-palettes png-splt-tp) (splt-palettes-num png-uint-32) (scal-unit png-byte) (scal-pixel-width :double) (scal-pixel-height :double) (scal-s-width png-charp) (scal-s-height png-charp) (row-pointers png-bytepp) (int-gamma png-fixed-point) (int-x-white png-fixed-point) (int-y-white png-fixed-point) (int-x-red png-fixed-point) (int-y-red png-fixed-point) (int-x-green png-fixed-point) (int-y-green png-fixed-point) (int-x-blue png-fixed-point) (int-y-blue png-fixed-point))
(cffi:defcstruct png-row-info-struct (width png-uint-32) (rowbytes png-uint-32) (color-type png-byte) (bit-depth png-byte) (channels png-byte) (pixel-depth png-byte))
(cffi:define-foreign-type jmp-buf () (QUOTE --jmp-buf-tag))
(cffi:define-foreign-type png-error-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-struct () (QUOTE png-struct-def))
(cffi:define-foreign-type png-voidp () (QUOTE :pointer))
(cffi:define-foreign-type png-rw-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-user-transform-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-row-info () (QUOTE png-row-info-struct))
(cffi:define-foreign-type z-stream () (QUOTE z-stream-s))
(cffi:define-foreign-type png-flush-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-uint-16pp () (QUOTE :pointer))
(cffi:define-foreign-type png-read-status-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-write-status-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-progressive-info-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-info () (QUOTE png-info-struct))
(cffi:define-foreign-type png-progressive-row-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-progressive-end-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-user-chunk-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-malloc-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-free-ptr () (QUOTE :pointer))
(cffi:defcstruct png-struct-def (jmpbuf jmp-buf :count 0) (error-fn png-error-ptr) (warning-fn png-error-ptr) (error-ptr png-voidp) (write-data-fn png-rw-ptr) (read-data-fn png-rw-ptr) (io-ptr png-voidp) (read-user-transform-fn png-user-transform-ptr) (write-user-transform-fn png-user-transform-ptr) (user-transform-ptr png-voidp) (user-transform-depth png-byte) (user-transform-channels png-byte) (mode png-uint-32) (flags png-uint-32) (transformations png-uint-32) (zstream z-stream) (zbuf png-bytep) (zbuf-size png-size-t) (zlib-level :int) (zlib-method :int) (zlib-window-bits :int) (zlib-mem-level :int) (zlib-strategy :int) (width png-uint-32) (height png-uint-32) (num-rows png-uint-32) (usr-width png-uint-32) (rowbytes png-uint-32) (irowbytes png-uint-32) (iwidth png-uint-32) (row-number png-uint-32) (prev-row png-bytep) (row-buf png-bytep) (sub-row png-bytep) (up-row png-bytep) (avg-row png-bytep) (paeth-row png-bytep) (row-info png-row-info) (idat-size png-uint-32) (crc png-uint-32) (palette png-colorp) (num-palette png-uint-16) (num-trans png-uint-16) (chunk-name png-byte :count 4) (compression png-byte) (filter png-byte) (interlaced png-byte) (pass png-byte) (do-filter png-byte) (color-type png-byte) (bit-depth png-byte) (usr-bit-depth png-byte) (pixel-depth png-byte) (channels png-byte) (usr-channels png-byte) (sig-bytes png-byte) (filler png-uint-16) (background-gamma-type png-byte) (background-gamma :float) (background png-color-16) (background-1 png-color-16) (output-flush-fn png-flush-ptr) (flush-dist png-uint-32) (flush-rows png-uint-32) (gamma-shift :int) (gamma :float) (screen-gamma :float) (gamma-table png-bytep) (gamma-from-1 png-bytep) (gamma-to-1 png-bytep) (gamma-16-table png-uint-16pp) (gamma-16-from-1 png-uint-16pp) (gamma-16-to-1 png-uint-16pp) (sig-bit png-color-8) (shift png-color-8) (trans png-bytep) (trans-values png-color-16) (read-row-fn png-read-status-ptr) (write-row-fn png-write-status-ptr) (info-fn png-progressive-info-ptr) (row-fn png-progressive-row-ptr) (end-fn png-progressive-end-ptr) (save-buffer-ptr png-bytep) (save-buffer png-bytep) (current-buffer-ptr png-bytep) (current-buffer png-bytep) (push-length png-uint-32) (skip-length png-uint-32) (save-buffer-size png-size-t) (save-buffer-max png-size-t) (buffer-size png-size-t) (current-buffer-size png-size-t) (process-mode :int) (cur-palette :int) (current-text-size png-size-t) (current-text-left png-size-t) (current-text png-charp) (current-text-ptr png-charp) (palette-lookup png-bytep) (dither-index png-bytep) (hist png-uint-16p) (heuristic-method png-byte) (num-prev-filters png-byte) (prev-filters png-bytep) (filter-weights png-uint-16p) (inv-filter-weights png-uint-16p) (filter-costs png-uint-16p) (inv-filter-costs png-uint-16p) (time-buffer png-charp) (free-me png-uint-32) (user-chunk-ptr png-voidp) (read-user-chunk-fn png-user-chunk-ptr) (num-chunk-list :int) (chunk-list png-bytep) (rgb-to-gray-status png-byte) (rgb-to-gray-red-coeff png-uint-16) (rgb-to-gray-green-coeff png-uint-16) (rgb-to-gray-blue-coeff png-uint-16) (mng-features-permitted png-uint-32) (int-gamma png-fixed-point) (filter-type png-byte) (mmx-bitdepth-threshold png-byte) (mmx-rowbytes-threshold png-uint-32) (asm-flags png-uint-32) (mem-ptr png-voidp) (malloc-fn png-malloc-ptr) (free-fn png-free-ptr) (big-row-buf png-bytep) (dither-sort png-bytep) (index-to-palette png-bytep) (palette-to-index png-bytep) (compression-type png-byte) (user-width-max png-uint-32) (user-height-max png-uint-32))
(cffi:define-foreign-type png-color-16p () (QUOTE :pointer))
(cffi:define-foreign-type png-timep () (QUOTE :pointer))
(cffi:define-foreign-type png-color-8p () (QUOTE :pointer))
(cffi:define-foreign-type file () (QUOTE -io-file))
(cffi:define-foreign-type png-infop () (QUOTE :pointer))
(cffi:define-foreign-type png-structp () (QUOTE :pointer))
(cffi:define-foreign-type png-structpp () (QUOTE :pointer))
(cffi:define-foreign-type version-1-2-8 () (QUOTE png-structp))
(cffi:define-foreign-type png-unknown-chunk-ptr () (QUOTE :pointer))
(cffi:define-foreign-type png-row-infopp () (QUOTE :pointer))
(cffi:define-foreign-type png-row-infop () (QUOTE :pointer))
(cffi:define-foreign-type png-infopp () (QUOTE :pointer))
(cffi:define-foreign-type png-unknown-chunkpp () (QUOTE :pointer))
(cffi:define-foreign-type png-timepp () (QUOTE :pointer))
(cffi:define-foreign-type png-textpp () (QUOTE :pointer))
(cffi:define-foreign-type png-splt-tpp () (QUOTE :pointer))
(cffi:define-foreign-type png-splt-entrypp () (QUOTE :pointer))
(cffi:define-foreign-type png-color-8pp () (QUOTE :pointer))
(cffi:define-foreign-type png-color-16pp () (QUOTE :pointer))
(cffi:define-foreign-type png-colorpp () (QUOTE :pointer))
(cffi:define-foreign-type png-zstreamp () (QUOTE :pointer))
(cffi:define-foreign-type png-zcharpp () (QUOTE :pointer))
(cffi:define-foreign-type charf () (QUOTE :char))
(cffi:define-foreign-type png-zcharp () (QUOTE :pointer))
(cffi:define-foreign-type png-charppp () (QUOTE :pointer))
(cffi:define-foreign-type png-doublepp () (QUOTE :pointer))
(cffi:define-foreign-type png-fixed-point-pp () (QUOTE :pointer))
(cffi:define-foreign-type png-const-charpp () (QUOTE :pointer))
(cffi:define-foreign-type png-int-16pp () (QUOTE :pointer))
(cffi:define-foreign-type png-int-16 () (QUOTE :short))
(cffi:define-foreign-type png-int-32pp () (QUOTE :pointer))
(cffi:define-foreign-type png-uint-32pp () (QUOTE :pointer))
(cffi:define-foreign-type png-doublep () (QUOTE :pointer))
(cffi:define-foreign-type png-file-p () (QUOTE :pointer))
(cffi:define-foreign-type png-fixed-point-p () (QUOTE :pointer))
(cffi:define-foreign-type png-const-charp () (QUOTE :pointer))
(cffi:define-foreign-type png-int-16p () (QUOTE :pointer))
(cffi:define-foreign-type png-int-32p () (QUOTE :pointer))
(cffi:define-foreign-type png-uint-32p () (QUOTE :pointer))
(cl:progn (cffi:defcfun ("png_get_user_height_max" png-get-user-height-max) png-uint-32 (anonymous5550 :pointer)) (cffi:defcfun ("png_get_user_width_max" png-get-user-width-max) png-uint-32 (anonymous5551 :pointer)) (cffi:defcfun ("png_set_user_limits" png-set-user-limits) :void (anonymous5552 :pointer) (anonymous5553 :unsigned-long) (anonymous5554 :unsigned-long)) (cffi:defcfun ("png_set_strip_error_numbers" png-set-strip-error-numbers) :void (anonymous5555 :pointer) (anonymous5556 :unsigned-long)) (cffi:defcfun ("png_mmx_support" png-mmx-support) :int) (cffi:defcfun ("png_set_mmx_thresholds" png-set-mmx-thresholds) :void (anonymous5557 :pointer) (anonymous5558 :unsigned-char) (anonymous5559 :unsigned-long)) (cffi:defcfun ("png_set_asm_flags" png-set-asm-flags) :void (anonymous5560 :pointer) (anonymous5561 :unsigned-long)) (cffi:defcfun ("png_get_mmx_rowbytes_threshold" png-get-mmx-rowbytes-threshold) png-uint-32 (anonymous5562 :pointer)) (cffi:defcfun ("png_get_mmx_bitdepth_threshold" png-get-mmx-bitdepth-threshold) png-byte (anonymous5563 :pointer)) (cffi:defcfun ("png_get_asm_flags" png-get-asm-flags) png-uint-32 (anonymous5564 :pointer)) (cffi:defcfun ("png_get_asm_flagmask" png-get-asm-flagmask) png-uint-32 (anonymous5565 :int)) (cffi:defcfun ("png_get_mmx_flagmask" png-get-mmx-flagmask) png-uint-32 (anonymous5566 :int) (anonymous5567 :pointer)) (cffi:defcfun ("png_permit_mng_features" png-permit-mng-features) png-uint-32 (anonymous5568 :pointer) (anonymous5569 :unsigned-long)) (cffi:defcfun ("png_get_libpng_ver" png-get-libpng-ver) png-charp (anonymous5570 :pointer)) (cffi:defcfun ("png_get_header_version" png-get-header-version) png-charp (anonymous5571 :pointer)) (cffi:defcfun ("png_get_header_ver" png-get-header-ver) png-charp (anonymous5572 :pointer)) (cffi:defcfun ("png_get_copyright" png-get-copyright) png-charp (anonymous5573 :pointer)) (cffi:defcfun ("png_sig_bytes" png-sig-bytes) png-bytep) (cffi:defcfun ("png_write_png" png-write-png) :void (anonymous5574 :pointer) (anonymous5575 :pointer) (anonymous5576 :int) (anonymous5577 :pointer)) (cffi:defcfun ("png_read_png" png-read-png) :void (anonymous5578 :pointer) (anonymous5579 :pointer) (anonymous5580 :int) (anonymous5581 :pointer)) (cffi:defcfun ("png_set_invalid" png-set-invalid) :void (anonymous5582 :pointer) (anonymous5583 :pointer) (anonymous5584 :int)) (cffi:defcfun ("png_handle_as_unknown" png-handle-as-unknown) :int (anonymous5585 :pointer) (anonymous5586 :pointer)) (cffi:defcfun ("png_get_unknown_chunks" png-get-unknown-chunks) png-uint-32 (anonymous5587 :pointer) (anonymous5588 :pointer) (anonymous5589 :pointer)) (cffi:defcfun ("png_set_unknown_chunk_location" png-set-unknown-chunk-location) :void (anonymous5590 :pointer) (anonymous5591 :pointer) (anonymous5592 :int) (anonymous5593 :int)) (cffi:defcfun ("png_set_unknown_chunks" png-set-unknown-chunks) :void (anonymous5594 :pointer) (anonymous5595 :pointer) (anonymous5596 :pointer) (anonymous5597 :int)) (cffi:defcfun ("png_set_keep_unknown_chunks" png-set-keep-unknown-chunks) :void (anonymous5598 :pointer) (anonymous5599 :int) (anonymous5600 :pointer) (anonymous5601 :int)) (cffi:defcfun ("png_set_sCAL_s" png-set-scal-s) :void (anonymous5602 :pointer) (anonymous5603 :pointer) (anonymous5604 :int) (anonymous5605 :pointer) (anonymous5606 :pointer)) (cffi:defcfun ("png_set_sCAL" png-set-scal) :void (anonymous5607 :pointer) (anonymous5608 :pointer) (anonymous5609 :int) (anonymous5610 :double) (anonymous5611 :double)) (cffi:defcfun ("png_get_sCAL" png-get-scal) png-uint-32 (anonymous5612 :pointer) (anonymous5613 :pointer) (anonymous5614 :pointer) (anonymous5615 :pointer) (anonymous5616 :pointer)) (cffi:defcfun ("png_set_tRNS" png-set-trns) :void (anonymous5617 :pointer) (anonymous5618 :pointer) (anonymous5619 :pointer) (anonymous5620 :int) (anonymous5621 :pointer)) (cffi:defcfun ("png_get_tRNS" png-get-trns) png-uint-32 (anonymous5622 :pointer) (anonymous5623 :pointer) (anonymous5624 :pointer) (anonymous5625 :pointer) (anonymous5626 :pointer)) (cffi:defcfun ("png_set_tIME" png-set-time) :void (anonymous5627 :pointer) (anonymous5628 :pointer) (anonymous5629 :pointer)) (cffi:defcfun ("png_get_tIME" png-get-time) png-uint-32 (anonymous5630 :pointer) (anonymous5631 :pointer) (anonymous5632 :pointer)) (cffi:defcfun ("png_set_text" png-set-text) :void (anonymous5633 :pointer) (anonymous5634 :pointer) (anonymous5635 :pointer) (anonymous5636 :int)) (cffi:defcfun ("png_get_text" png-get-text) png-uint-32 (anonymous5637 :pointer) (anonymous5638 :pointer) (anonymous5639 :pointer) (anonymous5640 :pointer)) (cffi:defcfun ("png_set_sPLT" png-set-splt) :void (anonymous5641 :pointer) (anonymous5642 :pointer) (anonymous5643 :pointer) (anonymous5644 :int)) (cffi:defcfun ("png_get_sPLT" png-get-splt) png-uint-32 (anonymous5645 :pointer) (anonymous5646 :pointer) (anonymous5647 :pointer)) (cffi:defcfun ("png_set_iCCP" png-set-iccp) :void (anonymous5648 :pointer) (anonymous5649 :pointer) (anonymous5650 :pointer) (anonymous5651 :int) (anonymous5652 :pointer) (anonymous5653 :unsigned-long)) (cffi:defcfun ("png_get_iCCP" png-get-iccp) png-uint-32 (anonymous5654 :pointer) (anonymous5655 :pointer) (anonymous5656 :pointer) (anonymous5657 :pointer) (anonymous5658 :pointer) (anonymous5659 :pointer)) (cffi:defcfun ("png_set_sRGB_gAMA_and_cHRM" png-set-srgb-gama-and-chrm) :void (anonymous5660 :pointer) (anonymous5661 :pointer) (anonymous5662 :int)) (cffi:defcfun ("png_set_sRGB" png-set-srgb) :void (anonymous5663 :pointer) (anonymous5664 :pointer) (anonymous5665 :int)) (cffi:defcfun ("png_get_sRGB" png-get-srgb) png-uint-32 (anonymous5666 :pointer) (anonymous5667 :pointer) (anonymous5668 :pointer)) (cffi:defcfun ("png_set_sBIT" png-set-sbit) :void (anonymous5669 :pointer) (anonymous5670 :pointer) (anonymous5671 :pointer)) (cffi:defcfun ("png_get_sBIT" png-get-sbit) png-uint-32 (anonymous5672 :pointer) (anonymous5673 :pointer) (anonymous5674 :pointer)) (cffi:defcfun ("png_set_PLTE" png-set-plte) :void (anonymous5675 :pointer) (anonymous5676 :pointer) (anonymous5677 :pointer) (anonymous5678 :int)) (cffi:defcfun ("png_get_PLTE" png-get-plte) png-uint-32 (anonymous5679 :pointer) (anonymous5680 :pointer) (anonymous5681 :pointer) (anonymous5682 :pointer)) (cffi:defcfun ("png_set_pHYs" png-set-phys) :void (anonymous5683 :pointer) (anonymous5684 :pointer) (anonymous5685 :unsigned-long) (anonymous5686 :unsigned-long) (anonymous5687 :int)) (cffi:defcfun ("png_get_pHYs" png-get-phys) png-uint-32 (anonymous5688 :pointer) (anonymous5689 :pointer) (anonymous5690 :pointer) (anonymous5691 :pointer) (anonymous5692 :pointer)) (cffi:defcfun ("png_set_pCAL" png-set-pcal) :void (anonymous5693 :pointer) (anonymous5694 :pointer) (anonymous5695 :pointer) (anonymous5696 :long) (anonymous5697 :long) (anonymous5698 :int) (anonymous5699 :int) (anonymous5700 :pointer) (anonymous5701 :pointer)) (cffi:defcfun ("png_get_pCAL" png-get-pcal) png-uint-32 (anonymous5702 :pointer) (anonymous5703 :pointer) (anonymous5704 :pointer) (anonymous5705 :pointer) (anonymous5706 :pointer) (anonymous5707 :pointer) (anonymous5708 :pointer) (anonymous5709 :pointer) (anonymous5710 :pointer)) (cffi:defcfun ("png_set_oFFs" png-set-offs) :void (anonymous5711 :pointer) (anonymous5712 :pointer) (anonymous5713 :long) (anonymous5714 :long) (anonymous5715 :int)) (cffi:defcfun ("png_get_oFFs" png-get-offs) png-uint-32 (anonymous5716 :pointer) (anonymous5717 :pointer) (anonymous5718 :pointer) (anonymous5719 :pointer) (anonymous5720 :pointer)) (cffi:defcfun ("png_set_IHDR" png-set-ihdr) :void (anonymous5721 :pointer) (anonymous5722 :pointer) (anonymous5723 :unsigned-long) (anonymous5724 :unsigned-long) (anonymous5725 :int) (anonymous5726 :int) (anonymous5727 :int) (anonymous5728 :int) (anonymous5729 :int)) (cffi:defcfun ("png_get_IHDR" png-get-ihdr) png-uint-32 (anonymous5730 :pointer) (anonymous5731 :pointer) (anonymous5732 :pointer) (anonymous5733 :pointer) (anonymous5734 :pointer) (anonymous5735 :pointer) (anonymous5736 :pointer) (anonymous5737 :pointer) (anonymous5738 :pointer)) (cffi:defcfun ("png_set_hIST" png-set-hist) :void (anonymous5739 :pointer) (anonymous5740 :pointer) (anonymous5741 :pointer)) (cffi:defcfun ("png_get_hIST" png-get-hist) png-uint-32 (anonymous5742 :pointer) (anonymous5743 :pointer) (anonymous5744 :pointer)) (cffi:defcfun ("png_set_gAMA_fixed" png-set-gama-fixed) :void (anonymous5745 :pointer) (anonymous5746 :pointer) (anonymous5747 :long)) (cffi:defcfun ("png_set_gAMA" png-set-gama) :void (anonymous5748 :pointer) (anonymous5749 :pointer) (anonymous5750 :double)) (cffi:defcfun ("png_get_gAMA_fixed" png-get-gama-fixed) png-uint-32 (anonymous5751 :pointer) (anonymous5752 :pointer) (anonymous5753 :pointer)) (cffi:defcfun ("png_get_gAMA" png-get-gama) png-uint-32 (anonymous5754 :pointer) (anonymous5755 :pointer) (anonymous5756 :pointer)) (cffi:defcfun ("png_set_cHRM_fixed" png-set-chrm-fixed) :void (anonymous5757 :pointer) (anonymous5758 :pointer) (anonymous5759 :long) (anonymous5760 :long) (anonymous5761 :long) (anonymous5762 :long) (anonymous5763 :long) (anonymous5764 :long) (anonymous5765 :long) (anonymous5766 :long)) (cffi:defcfun ("png_set_cHRM" png-set-chrm) :void (anonymous5767 :pointer) (anonymous5768 :pointer) (anonymous5769 :double) (anonymous5770 :double) (anonymous5771 :double) (anonymous5772 :double) (anonymous5773 :double) (anonymous5774 :double) (anonymous5775 :double) (anonymous5776 :double)) (cffi:defcfun ("png_get_cHRM_fixed" png-get-chrm-fixed) png-uint-32 (anonymous5777 :pointer) (anonymous5778 :pointer) (anonymous5779 :pointer) (anonymous5780 :pointer) (anonymous5781 :pointer) (anonymous5782 :pointer) (anonymous5783 :pointer) (anonymous5784 :pointer) (anonymous5785 :pointer) (anonymous5786 :pointer)) (cffi:defcfun ("png_get_cHRM" png-get-chrm) png-uint-32 (anonymous5787 :pointer) (anonymous5788 :pointer) (anonymous5789 :pointer) (anonymous5790 :pointer) (anonymous5791 :pointer) (anonymous5792 :pointer) (anonymous5793 :pointer) (anonymous5794 :pointer) (anonymous5795 :pointer) (anonymous5796 :pointer)) (cffi:defcfun ("png_set_bKGD" png-set-bkgd) :void (anonymous5797 :pointer) (anonymous5798 :pointer) (anonymous5799 :pointer)) (cffi:defcfun ("png_get_bKGD" png-get-bkgd) png-uint-32 (anonymous5800 :pointer) (anonymous5801 :pointer) (anonymous5802 :pointer)) (cffi:defcfun ("png_get_signature" png-get-signature) png-bytep (anonymous5803 :pointer) (anonymous5804 :pointer)) (cffi:defcfun ("png_get_y_offset_microns" png-get-y-offset-microns) png-int-32 (anonymous5805 :pointer) (anonymous5806 :pointer)) (cffi:defcfun ("png_get_x_offset_microns" png-get-x-offset-microns) png-int-32 (anonymous5807 :pointer) (anonymous5808 :pointer)) (cffi:defcfun ("png_get_y_offset_pixels" png-get-y-offset-pixels) png-int-32 (anonymous5809 :pointer) (anonymous5810 :pointer)) (cffi:defcfun ("png_get_x_offset_pixels" png-get-x-offset-pixels) png-int-32 (anonymous5811 :pointer) (anonymous5812 :pointer)) (cffi:defcfun ("png_get_pixel_aspect_ratio" png-get-pixel-aspect-ratio) :float (anonymous5813 :pointer) (anonymous5814 :pointer)) (cffi:defcfun ("png_get_y_pixels_per_meter" png-get-y-pixels-per-meter) png-uint-32 (anonymous5815 :pointer) (anonymous5816 :pointer)) (cffi:defcfun ("png_get_x_pixels_per_meter" png-get-x-pixels-per-meter) png-uint-32 (anonymous5817 :pointer) (anonymous5818 :pointer)) (cffi:defcfun ("png_get_pixels_per_meter" png-get-pixels-per-meter) png-uint-32 (anonymous5819 :pointer) (anonymous5820 :pointer)) (cffi:defcfun ("png_get_compression_type" png-get-compression-type) png-byte (anonymous5821 :pointer) (anonymous5822 :pointer)) (cffi:defcfun ("png_get_interlace_type" png-get-interlace-type) png-byte (anonymous5823 :pointer) (anonymous5824 :pointer)) (cffi:defcfun ("png_get_filter_type" png-get-filter-type) png-byte (anonymous5825 :pointer) (anonymous5826 :pointer)) (cffi:defcfun ("png_get_color_type" png-get-color-type) png-byte (anonymous5827 :pointer) (anonymous5828 :pointer)) (cffi:defcfun ("png_get_bit_depth" png-get-bit-depth) png-byte (anonymous5829 :pointer) (anonymous5830 :pointer)) (cffi:defcfun ("png_get_image_height" png-get-image-height) png-uint-32 (anonymous5831 :pointer) (anonymous5832 :pointer)) (cffi:defcfun ("png_get_image_width" png-get-image-width) png-uint-32 (anonymous5833 :pointer) (anonymous5834 :pointer)) (cffi:defcfun ("png_get_channels" png-get-channels) png-byte (anonymous5835 :pointer) (anonymous5836 :pointer)) (cffi:defcfun ("png_set_rows" png-set-rows) :void (anonymous5837 :pointer) (anonymous5838 :pointer) (anonymous5839 :pointer)) (cffi:defcfun ("png_get_rows" png-get-rows) png-bytepp (anonymous5840 :pointer) (anonymous5841 :pointer)) (cffi:defcfun ("png_get_rowbytes" png-get-rowbytes) png-uint-32 (anonymous5842 :pointer) (anonymous5843 :pointer)) (cffi:defcfun ("png_get_valid" png-get-valid) png-uint-32 (anonymous5844 :pointer) (anonymous5845 :pointer) (anonymous5846 :unsigned-long)) (cffi:defcfun ("png_chunk_warning" png-chunk-warning) :void (anonymous5847 :pointer) (anonymous5848 :pointer)) (cffi:defcfun ("png_warning" png-warning) :void (anonymous5849 :pointer) (anonymous5850 :pointer)) (cffi:defcfun ("png_chunk_error" png-chunk-error) :void (anonymous5851 :pointer) (anonymous5852 :pointer)) (cffi:defcfun ("png_error" png-error) :void (anonymous5853 :pointer) (anonymous5854 :pointer)) (cffi:defcfun ("png_memset_check" png-memset-check) png-voidp (anonymous5855 :pointer) (anonymous5856 :pointer) (anonymous5857 :int) (anonymous5858 :unsigned-long)) (cffi:defcfun ("png_memcpy_check" png-memcpy-check) png-voidp (anonymous5859 :pointer) (anonymous5860 :pointer) (anonymous5861 :pointer) (anonymous5862 :unsigned-long)) (cffi:defcfun ("png_free_default" png-free-default) :void (anonymous5863 :pointer) (anonymous5864 :pointer)) (cffi:defcfun ("png_malloc_default" png-malloc-default) png-voidp (anonymous5865 :pointer) (anonymous5866 :unsigned-long)) (cffi:defcfun ("png_data_freer" png-data-freer) :void (anonymous5867 :pointer) (anonymous5868 :pointer) (anonymous5869 :int) (anonymous5870 :unsigned-long)) (cffi:defcfun ("png_free_data" png-free-data) :void (anonymous5871 :pointer) (anonymous5872 :pointer) (anonymous5873 :unsigned-long) (anonymous5874 :int)) (cffi:defcfun ("png_free" png-free) :void (anonymous5875 :pointer) (anonymous5876 :pointer)) (cffi:defcfun ("png_malloc_warn" png-malloc-warn) png-voidp (anonymous5877 :pointer) (anonymous5878 :unsigned-long)) (cffi:defcfun ("png_malloc" png-malloc) png-voidp (anonymous5879 :pointer) (anonymous5880 :unsigned-long)) (cffi:defcfun ("png_progressive_combine_row" png-progressive-combine-row) :void (anonymous5881 :pointer) (anonymous5882 :pointer) (anonymous5883 :pointer)) (cffi:defcfun ("png_process_data" png-process-data) :void (anonymous5884 :pointer) (anonymous5885 :pointer) (anonymous5886 :pointer) (anonymous5887 :unsigned-int)) (cffi:defcfun ("png_get_progressive_ptr" png-get-progressive-ptr) png-voidp (anonymous5888 :pointer)) (cffi:defcfun ("png_set_progressive_read_fn" png-set-progressive-read-fn) :void (anonymous5889 :pointer) (anonymous5890 :pointer) (anonymous5891 :pointer) (anonymous5892 :pointer) (anonymous5893 :pointer)) (cffi:defcfun ("png_get_user_chunk_ptr" png-get-user-chunk-ptr) png-voidp (anonymous5894 :pointer)) (cffi:defcfun ("png_set_read_user_chunk_fn" png-set-read-user-chunk-fn) :void (anonymous5895 :pointer) (anonymous5896 :pointer) (anonymous5897 :pointer)) (cffi:defcfun ("png_get_user_transform_ptr" png-get-user-transform-ptr) png-voidp (anonymous5898 :pointer)) (cffi:defcfun ("png_set_user_transform_info" png-set-user-transform-info) :void (anonymous5899 :pointer) (anonymous5900 :pointer) (anonymous5901 :int) (anonymous5902 :int)) (cffi:defcfun ("png_set_write_user_transform_fn" png-set-write-user-transform-fn) :void (anonymous5903 :pointer) (anonymous5904 :pointer)) (cffi:defcfun ("png_set_read_user_transform_fn" png-set-read-user-transform-fn) :void (anonymous5905 :pointer) (anonymous5906 :pointer)) (cffi:defcfun ("png_get_mem_ptr" png-get-mem-ptr) png-voidp (anonymous5907 :pointer)) (cffi:defcfun ("png_set_mem_fn" png-set-mem-fn) :void (anonymous5908 :pointer) (anonymous5909 :pointer) (anonymous5910 :pointer) (anonymous5911 :pointer)) (cffi:defcfun ("png_set_write_status_fn" png-set-write-status-fn) :void (anonymous5912 :pointer) (anonymous5913 :pointer)) (cffi:defcfun ("png_set_read_status_fn" png-set-read-status-fn) :void (anonymous5914 :pointer) (anonymous5915 :pointer)) (cffi:defcfun ("png_get_io_ptr" png-get-io-ptr) png-voidp (anonymous5916 :pointer)) (cffi:defcfun ("png_set_read_fn" png-set-read-fn) :void (anonymous5917 :pointer) (anonymous5918 :pointer) (anonymous5919 :pointer)) (cffi:defcfun ("png_set_write_fn" png-set-write-fn) :void (anonymous5920 :pointer) (anonymous5921 :pointer) (anonymous5922 :pointer) (anonymous5923 :pointer)) (cffi:defcfun ("png_get_error_ptr" png-get-error-ptr) png-voidp (anonymous5924 :pointer)) (cffi:defcfun ("png_set_error_fn" png-set-error-fn) :void (anonymous5925 :pointer) (anonymous5926 :pointer) (anonymous5927 :pointer) (anonymous5928 :pointer)) (cffi:defcfun ("png_init_io" png-init-io) :void (anonymous5929 :pointer) (anonymous5930 :pointer)) (cffi:defcfun ("png_set_compression_method" png-set-compression-method) :void (anonymous5931 :pointer) (anonymous5932 :int)) (cffi:defcfun ("png_set_compression_window_bits" png-set-compression-window-bits) :void (anonymous5933 :pointer) (anonymous5934 :int)) (cffi:defcfun ("png_set_compression_strategy" png-set-compression-strategy) :void (anonymous5935 :pointer) (anonymous5936 :int)) (cffi:defcfun ("png_set_compression_mem_level" png-set-compression-mem-level) :void (anonymous5937 :pointer) (anonymous5938 :int)) (cffi:defcfun ("png_set_compression_level" png-set-compression-level) :void (anonymous5939 :pointer) (anonymous5940 :int)) (cffi:defcfun ("png_set_filter_heuristics" png-set-filter-heuristics) :void (anonymous5941 :pointer) (anonymous5942 :int) (anonymous5943 :int) (anonymous5944 :pointer) (anonymous5945 :pointer)) (cffi:defcfun ("png_set_filter" png-set-filter) :void (anonymous5946 :pointer) (anonymous5947 :int) (anonymous5948 :int)) (cffi:defcfun ("png_set_crc_action" png-set-crc-action) :void (anonymous5949 :pointer) (anonymous5950 :int) (anonymous5951 :int)) (cffi:defcfun ("png_write_destroy" png-write-destroy) :void (anonymous5952 :pointer)) (cffi:defcfun ("png_destroy_write_struct" png-destroy-write-struct) :void (anonymous5953 :pointer) (anonymous5954 :pointer)) (cffi:defcfun ("png_read_destroy" png-read-destroy) :void (anonymous5955 :pointer) (anonymous5956 :pointer) (anonymous5957 :pointer)) (cffi:defcfun ("png_destroy_read_struct" png-destroy-read-struct) :void (anonymous5958 :pointer) (anonymous5959 :pointer) (anonymous5960 :pointer)) (cffi:defcfun ("png_destroy_info_struct" png-destroy-info-struct) :void (anonymous5961 :pointer) (anonymous5962 :pointer)) (cffi:defcfun ("png_read_end" png-read-end) :void (anonymous5963 :pointer) (anonymous5964 :pointer)) (cffi:defcfun ("png_write_end" png-write-end) :void (anonymous5965 :pointer) (anonymous5966 :pointer)) (cffi:defcfun ("png_write_image" png-write-image) :void (anonymous5967 :pointer) (anonymous5968 :pointer)) (cffi:defcfun ("png_write_rows" png-write-rows) :void (anonymous5969 :pointer) (anonymous5970 :pointer) (anonymous5971 :unsigned-long)) (cffi:defcfun ("png_write_row" png-write-row) :void (anonymous5972 :pointer) (anonymous5973 :pointer)) (cffi:defcfun ("png_read_image" png-read-image) :void (anonymous5974 :pointer) (anonymous5975 :pointer)) (cffi:defcfun ("png_read_row" png-read-row) :void (anonymous5976 :pointer) (anonymous5977 :pointer) (anonymous5978 :pointer)) (cffi:defcfun ("png_read_rows" png-read-rows) :void (anonymous5979 :pointer) (anonymous5980 :pointer) (anonymous5981 :pointer) (anonymous5982 :unsigned-long)) (cffi:defcfun ("png_read_update_info" png-read-update-info) :void (anonymous5983 :pointer) (anonymous5984 :pointer)) (cffi:defcfun ("png_start_read_image" png-start-read-image) :void (anonymous5985 :pointer)) (cffi:defcfun ("png_write_flush" png-write-flush) :void (anonymous5986 :pointer)) (cffi:defcfun ("png_set_flush" png-set-flush) :void (anonymous5987 :pointer) (anonymous5988 :int)) (cffi:defcfun ("png_permit_empty_plte" png-permit-empty-plte) :void (anonymous5989 :pointer) (anonymous5990 :int)) (cffi:defcfun ("png_set_gamma" png-set-gamma) :void (anonymous5991 :pointer) (anonymous5992 :double) (anonymous5993 :double)) (cffi:defcfun ("png_set_dither" png-set-dither) :void (anonymous5994 :pointer) (anonymous5995 :pointer) (anonymous5996 :int) (anonymous5997 :int) (anonymous5998 :pointer) (anonymous5999 :int)) (cffi:defcfun ("png_set_strip_16" png-set-strip-16) :void (anonymous6000 :pointer)) (cffi:defcfun ("png_set_background" png-set-background) :void (anonymous6001 :pointer) (anonymous6002 :pointer) (anonymous6003 :int) (anonymous6004 :int) (anonymous6005 :double)) (cffi:defcfun ("png_set_invert_mono" png-set-invert-mono) :void (anonymous6006 :pointer)) (cffi:defcfun ("png_set_interlace_handling" png-set-interlace-handling) :int (anonymous6007 :pointer)) (cffi:defcfun ("png_set_shift" png-set-shift) :void (anonymous6008 :pointer) (anonymous6009 :pointer)) (cffi:defcfun ("png_set_packswap" png-set-packswap) :void (anonymous6010 :pointer)) (cffi:defcfun ("png_set_packing" png-set-packing) :void (anonymous6011 :pointer)) (cffi:defcfun ("png_set_swap" png-set-swap) :void (anonymous6012 :pointer)) (cffi:defcfun ("png_set_add_alpha" png-set-add-alpha) :void (anonymous6013 :pointer) (anonymous6014 :unsigned-long) (anonymous6015 :int)) (cffi:defcfun ("png_set_filler" png-set-filler) :void (anonymous6016 :pointer) (anonymous6017 :unsigned-long) (anonymous6018 :int)) (cffi:defcfun ("png_set_invert_alpha" png-set-invert-alpha) :void (anonymous6019 :pointer)) (cffi:defcfun ("png_set_swap_alpha" png-set-swap-alpha) :void (anonymous6020 :pointer)) (cffi:defcfun ("png_set_strip_alpha" png-set-strip-alpha) :void (anonymous6021 :pointer)) (cffi:defcfun ("png_build_grayscale_palette" png-build-grayscale-palette) :void (anonymous6022 :int) (anonymous6023 :pointer)) (cffi:defcfun ("png_get_rgb_to_gray_status" png-get-rgb-to-gray-status) png-byte (anonymous6024 :pointer)) (cffi:defcfun ("png_set_rgb_to_gray_fixed" png-set-rgb-to-gray-fixed) :void (anonymous6025 :pointer) (anonymous6026 :int) (anonymous6027 :long) (anonymous6028 :long)) (cffi:defcfun ("png_set_rgb_to_gray" png-set-rgb-to-gray) :void (anonymous6029 :pointer) (anonymous6030 :int) (anonymous6031 :double) (anonymous6032 :double)) (cffi:defcfun ("png_set_gray_to_rgb" png-set-gray-to-rgb) :void (anonymous6033 :pointer)) (cffi:defcfun ("png_set_bgr" png-set-bgr) :void (anonymous6034 :pointer)) (cffi:defcfun ("png_set_tRNS_to_alpha" png-set-trns-to-alpha) :void (anonymous6035 :pointer)) (cffi:defcfun ("png_set_palette_to_rgb" png-set-palette-to-rgb) :void (anonymous6036 :pointer)) (cffi:defcfun ("png_set_gray_1_2_4_to_8" png-set-gray-1-2-4-to-8) :void (anonymous6037 :pointer)) (cffi:defcfun ("png_set_expand" png-set-expand) :void (anonymous6038 :pointer)) (cffi:defcfun ("png_convert_from_time_t" png-convert-from-time-t) :void (anonymous6039 :pointer) (anonymous6040 :long)) (cffi:defcfun ("png_convert_from_struct_tm" png-convert-from-struct-tm) :void (anonymous6041 :pointer) (anonymous6042 :pointer)) (cffi:defcfun ("png_convert_to_rfc1123" png-convert-to-rfc1123) png-charp (anonymous6043 :pointer) (anonymous6044 :pointer)) (cffi:defcfun ("png_read_info" png-read-info) :void (anonymous6045 :pointer) (anonymous6046 :pointer)) (cffi:defcfun ("png_write_info" png-write-info) :void (anonymous6047 :pointer) (anonymous6048 :pointer)) (cffi:defcfun ("png_write_info_before_PLTE" png-write-info-before-plte) :void (anonymous6049 :pointer) (anonymous6050 :pointer)) (cffi:defcfun ("png_info_init_3" png-info-init-3) :void (anonymous6051 :pointer) (anonymous6052 :unsigned-int)) (cffi:defcfun ("png_info_init" png-info-init) :void (anonymous6053 :pointer)) (cffi:defcfun ("png_create_info_struct" png-create-info-struct) png-infop (anonymous6054 :pointer)) (cffi:defcfun ("png_write_chunk_end" png-write-chunk-end) :void (anonymous6055 :pointer)) (cffi:defcfun ("png_write_chunk_data" png-write-chunk-data) :void (anonymous6056 :pointer) (anonymous6057 :pointer) (anonymous6058 :unsigned-int)) (cffi:defcfun ("png_write_chunk_start" png-write-chunk-start) :void (anonymous6059 :pointer) (anonymous6060 :pointer) (anonymous6061 :unsigned-long)) (cffi:defcfun ("png_write_chunk" png-write-chunk) :void (anonymous6062 :pointer) (anonymous6063 :pointer) (anonymous6064 :pointer) (anonymous6065 :unsigned-int)) (cffi:defcfun ("png_create_write_struct_2" png-create-write-struct-2) png-structp (anonymous6066 :pointer) (anonymous6067 :pointer) (anonymous6068 :pointer) (anonymous6069 :pointer) (anonymous6070 :pointer) (anonymous6071 :pointer) (anonymous6072 :pointer)) (cffi:defcfun ("png_create_read_struct_2" png-create-read-struct-2) png-structp (anonymous6073 :pointer) (anonymous6074 :pointer) (anonymous6075 :pointer) (anonymous6076 :pointer) (anonymous6077 :pointer) (anonymous6078 :pointer) (anonymous6079 :pointer)) (cffi:defcfun ("png_reset_zstream" png-reset-zstream) :int (anonymous6080 :pointer)) (cffi:defcfun ("png_set_compression_buffer_size" png-set-compression-buffer-size) :void (anonymous6081 :pointer) (anonymous6082 :unsigned-long)) (cffi:defcfun ("png_get_compression_buffer_size" png-get-compression-buffer-size) png-uint-32 (anonymous6083 :pointer)) (cffi:defcfun ("png_create_write_struct" png-create-write-struct) png-structp (anonymous6084 :pointer) (anonymous6085 :pointer) (anonymous6086 :pointer) (anonymous6087 :pointer)) (cffi:defcfun ("png_create_read_struct" png-create-read-struct) png-structp (anonymous6088 :pointer) (anonymous6089 :pointer) (anonymous6090 :pointer) (anonymous6091 :pointer)) (cffi:defcfun ("png_check_sig" png-check-sig) :int (anonymous6092 :pointer) (anonymous6093 :int)) (cffi:defcfun ("png_sig_cmp" png-sig-cmp) :int (anonymous6094 :pointer) (anonymous6095 :unsigned-int) (anonymous6096 :unsigned-int)) (cffi:defcfun ("png_set_sig_bytes" png-set-sig-bytes) :void (anonymous6097 :pointer) (anonymous6098 :int)) (cffi:defcfun ("png_access_version_number" png-access-version-number) png-uint-32) (cl:defparameter png-libpng-ver-sonum 0) (cl:defparameter png-libpng-ver-dllnum 13) (cl:defparameter png-libpng-ver-major 1) (cl:defparameter png-libpng-ver-minor 2) (cl:defparameter png-libpng-ver-release 8) (cl:defparameter png-libpng-ver-build 0) (cl:defparameter png-libpng-build-alpha 1) (cl:defparameter png-libpng-build-beta 2) (cl:defparameter png-libpng-build-rc 3) (cl:defparameter png-libpng-build-stable 4) (cl:defparameter png-libpng-build-release-status-mask 7) (cl:defparameter png-libpng-build-patch 8) (cl:defparameter png-libpng-build-private 16) (cl:defparameter png-libpng-build-special 32) (cl:defparameter png-libpng-ver-1 10208) (cl:defparameter png-zbuf-size 8192) (cl:defparameter png-text-compression-none-wr -3) (cl:defparameter png-text-compression-ztxt-wr -2) (cl:defparameter png-text-compression-none -1) (cl:defparameter png-text-compression-ztxt 0) (cl:defparameter png-itxt-compression-none 1) (cl:defparameter png-itxt-compression-ztxt 2) (cl:defparameter png-text-compression-last 3) (cl:defparameter png-color-mask-palette 1) (cl:defparameter png-color-mask-color 2) (cl:defparameter png-color-mask-alpha 4) (cl:defparameter png-color-type-gray 0) (cl:defparameter png-compression-type-base 0) (cl:defparameter png-filter-type-base 0) (cl:defparameter png-intrapixel-differencing 64) (cl:defparameter png-interlace-none 0) (cl:defparameter png-interlace-adam7 1) (cl:defparameter png-interlace-last 2) (cl:defparameter png-offset-pixel 0) (cl:defparameter png-offset-micrometer 1) (cl:defparameter png-offset-last 2) (cl:defparameter png-equation-linear 0) (cl:defparameter png-equation-base-e 1) (cl:defparameter png-equation-arbitrary 2) (cl:defparameter png-equation-hyperbolic 3) (cl:defparameter png-equation-last 4) (cl:defparameter png-scale-unknown 0) (cl:defparameter png-scale-meter 1) (cl:defparameter png-scale-radian 2) (cl:defparameter png-scale-last 3) (cl:defparameter png-resolution-unknown 0) (cl:defparameter png-resolution-meter 1) (cl:defparameter png-resolution-last 2) (cl:defparameter png-srgb-intent-perceptual 0) (cl:defparameter png-srgb-intent-relative 1) (cl:defparameter png-srgb-intent-saturation 2) (cl:defparameter png-srgb-intent-absolute 3) (cl:defparameter png-srgb-intent-last 4) (cl:defparameter png-keyword-max-length 79) (cl:defparameter png-max-palette-length 256) (cl:defparameter png-info-gama 1) (cl:defparameter png-info-sbit 2) (cl:defparameter png-info-chrm 4) (cl:defparameter png-info-plte 8) (cl:defparameter png-info-trns 16) (cl:defparameter png-info-bkgd 32) (cl:defparameter png-info-hist 64) (cl:defparameter png-info-phys 128) (cl:defparameter png-info-offs 256) (cl:defparameter png-info-time 512) (cl:defparameter png-info-pcal 1024) (cl:defparameter png-info-srgb 2048) (cl:defparameter png-info-iccp 4096) (cl:defparameter png-info-splt 8192) (cl:defparameter png-info-scal 16384) (cl:defparameter png-transform-identity 0) (cl:defparameter png-transform-strip-16 1) (cl:defparameter png-transform-strip-alpha 2) (cl:defparameter png-transform-packing 4) (cl:defparameter png-transform-packswap 8) (cl:defparameter png-transform-expand 16) (cl:defparameter png-transform-invert-mono 32) (cl:defparameter png-transform-shift 64) (cl:defparameter png-transform-bgr 128) (cl:defparameter png-transform-swap-alpha 256) (cl:defparameter png-transform-swap-endian 512) (cl:defparameter png-transform-invert-alpha 1024) (cl:defparameter png-transform-strip-filler 2048) (cl:defparameter png-flag-mng-empty-plte 1) (cl:defparameter png-flag-mng-filter-64 4) (cl:defparameter png-all-mng-features 5) (cl:defparameter png-filler-before 0) (cl:defparameter png-filler-after 1) (cl:defparameter png-background-gamma-unknown 0) (cl:defparameter png-background-gamma-screen 1) (cl:defparameter png-background-gamma-file 2) (cl:defparameter png-background-gamma-unique 3) (cl:defparameter png-crc-default 0) (cl:defparameter png-crc-error-quit 1) (cl:defparameter png-crc-warn-discard 2) (cl:defparameter png-crc-warn-use 3) (cl:defparameter png-crc-quiet-use 4) (cl:defparameter png-crc-no-change 5) (cl:defparameter png-no-filters 0) (cl:defparameter png-filter-none 8) (cl:defparameter png-filter-sub 16) (cl:defparameter png-filter-up 32) (cl:defparameter png-filter-avg 64) (cl:defparameter png-filter-paeth 128) (cl:defparameter png-filter-value-none 0) (cl:defparameter png-filter-value-sub 1) (cl:defparameter png-filter-value-up 2) (cl:defparameter png-filter-value-avg 3) (cl:defparameter png-filter-value-paeth 4) (cl:defparameter png-filter-value-last 5) (cl:defparameter png-filter-heuristic-default 0) (cl:defparameter png-filter-heuristic-unweighted 1) (cl:defparameter png-filter-heuristic-weighted 2) (cl:defparameter png-filter-heuristic-last 3) (cl:defparameter png-destroy-will-free-data 1) (cl:defparameter png-set-will-free-data 1) (cl:defparameter png-user-will-free-data 2) (cl:defparameter png-free-hist 8) (cl:defparameter png-free-iccp 16) (cl:defparameter png-free-splt 32) (cl:defparameter png-free-rows 64) (cl:defparameter png-free-pcal 128) (cl:defparameter png-free-scal 256) (cl:defparameter png-free-unkn 512) (cl:defparameter png-free-list 1024) (cl:defparameter png-free-plte 4096) (cl:defparameter png-free-trns 8192) (cl:defparameter png-free-text 16384) (cl:defparameter png-free-all 32767) (cl:defparameter png-free-mul 16928) (cl:defparameter png-handle-chunk-as-default 0) (cl:defparameter png-handle-chunk-never 1) (cl:defparameter png-handle-chunk-if-safe 2) (cl:defparameter png-handle-chunk-always 3) (cl:defparameter png-asm-flag-mmx-support-compiled 1) (cl:defparameter png-asm-flag-mmx-support-in-cpu 2) (cl:defparameter png-asm-flag-mmx-read-combine-row 4) (cl:defparameter png-asm-flag-mmx-read-interlace 8) (cl:defparameter png-asm-flag-mmx-read-filter-sub 16) (cl:defparameter png-asm-flag-mmx-read-filter-up 32) (cl:defparameter png-asm-flag-mmx-read-filter-avg 64) (cl:defparameter png-asm-flag-mmx-read-filter-paeth 128) (cl:defparameter png-asm-flags-initialized 2147483648) (cl:defparameter png-select-read 1) (cl:defparameter png-select-write 2))
